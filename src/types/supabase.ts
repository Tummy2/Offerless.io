// This file will be auto-generated by Supabase CLI
// For now, we'll create a basic type definition that matches our schema

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          username: string
          display_name: string | null
          email: string
          email_verified_at: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          username: string
          display_name?: string | null
          email: string
          email_verified_at?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          username?: string
          display_name?: string | null
          email?: string
          email_verified_at?: string | null
          created_at?: string
          updated_at?: string
        }
      }
      applications: {
        Row: {
          id: string
          user_id: string
          company: string
          job_title: string
          applied_at: string
          status: 'applied' | 'interviewing' | 'rejected' | 'ghosted' | 'offer'
          company_url: string
          salary_amount: number | null
          salary_type: 'hourly' | 'salary' | null
          location_label: string | null
          location_kind: 'onsite' | 'remote'
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          company: string
          job_title: string
          applied_at: string
          status: 'applied' | 'interviewing' | 'rejected' | 'ghosted' | 'offer'
          company_url: string
          salary_amount?: number | null
          salary_type?: 'hourly' | 'salary' | null
          location_label?: string | null
          location_kind?: 'onsite' | 'remote'
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          company?: string
          job_title?: string
          applied_at?: string
          status?: 'applied' | 'interviewing' | 'rejected' | 'ghosted' | 'offer'
          company_url?: string
          salary_amount?: number | null
          salary_type?: 'hourly' | 'salary' | null
          location_label?: string | null
          location_kind?: 'onsite' | 'remote'
          created_at?: string
          updated_at?: string
        }
      }
      leaderboard_snapshots: {
        Row: {
          id: number
          user_id: string
          total_apps: number
          count_applied: number
          count_interviewing: number
          count_rejected: number
          count_ghosted: number
          count_offer: number
          computed_at: string
        }
        Insert: {
          id?: number
          user_id: string
          total_apps?: number
          count_applied?: number
          count_interviewing?: number
          count_rejected?: number
          count_ghosted?: number
          count_offer?: number
          computed_at?: string
        }
        Update: {
          id?: number
          user_id?: string
          total_apps?: number
          count_applied?: number
          count_interviewing?: number
          count_rejected?: number
          count_ghosted?: number
          count_offer?: number
          computed_at?: string
        }
      }
    }
    Views: {
      public_leaderboard: {
        Row: {
          username: string
          display_name: string | null
          total_apps: number
          count_applied: number
          count_interviewing: number
          count_rejected: number
          count_ghosted: number
          count_offer: number
          rank: number
        }
      }
    }
    Functions: {
      refresh_leaderboard_snapshots: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      validate_url: {
        Args: { url: string }
        Returns: boolean
      }
    }
    Enums: {
      [_ in never]: never
    }
  }
}